Each class or module should be designed in a way that itâ€™s open for extension but closed for modification.
In other words, you should be able to add new functionality to your code without having to modify the existing code.
In the context of Django REST Framework (DRF), you can achieve this by extending Serializer class created before to create new Serializer with different functionality.

class BlogPostSerializer(serializers.Serializer):
    title = serializers.CharField(max_length=100)
    content = serializers.CharField()

    def create(self, validated_data):
        raise NotImplementedError()

class TextBlogPostSerializer(BlogPostSerializer):
    def create(self, validated_data):
        # implement here
        pass

class ImageBlogPostSerializer(BlogPostSerializer):
    image = serializers.ImageField()
    def create(self, validated_data):
        # implement here
        pass

class VideoBlogPostSerializer(BlogPostSerializer):
    video_url = serializers.URLField()
    def create(self, validated_data):
        # implement here
        pass        